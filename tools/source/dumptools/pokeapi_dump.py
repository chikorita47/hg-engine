#!/usr/bin/env python3

import math
import os
import re
import subprocess
import shutil
import struct
import sys
import pokebase as pb



SPECIESLIST = [
    'bulbasaur',
    'ivysaur',
    'venusaur',
    'charmander',
    'charmeleon',
    'charizard',
    'squirtle',
    'wartortle',
    'blastoise',
    'caterpie',
    'metapod',
    'butterfree',
    'weedle',
    'kakuna',
    'beedrill',
    'pidgey',
    'pidgeotto',
    'pidgeot',
    'rattata',
    'raticate',
    'spearow',
    'fearow',
    'ekans',
    'arbok',
    'pikachu',
    'raichu',
    'sandshrew',
    'sandslash',
    'nidoran-f',
    'nidorina',
    'nidoqueen',
    'nidoran-m',
    'nidorino',
    'nidoking',
    'clefairy',
    'clefable',
    'vulpix',
    'ninetales',
    'jigglypuff',
    'wigglytuff',
    'zubat',
    'golbat',
    'oddish',
    'gloom',
    'vileplume',
    'paras',
    'parasect',
    'venonat',
    'venomoth',
    'diglett',
    'dugtrio',
    'meowth',
    'persian',
    'psyduck',
    'golduck',
    'mankey',
    'primeape',
    'growlithe',
    'arcanine',
    'poliwag',
    'poliwhirl',
    'poliwrath',
    'abra',
    'kadabra',
    'alakazam',
    'machop',
    'machoke',
    'machamp',
    'bellsprout',
    'weepinbell',
    'victreebel',
    'tentacool',
    'tentacruel',
    'geodude',
    'graveler',
    'golem',
    'ponyta',
    'rapidash',
    'slowpoke',
    'slowbro',
    'magnemite',
    'magneton',
    'farfetchd',
    'doduo',
    'dodrio',
    'seel',
    'dewgong',
    'grimer',
    'muk',
    'shellder',
    'cloyster',
    'gastly',
    'haunter',
    'gengar',
    'onix',
    'drowzee',
    'hypno',
    'krabby',
    'kingler',
    'voltorb',
    'electrode',
    'exeggcute',
    'exeggutor',
    'cubone',
    'marowak',
    'hitmonlee',
    'hitmonchan',
    'lickitung',
    'koffing',
    'weezing',
    'rhyhorn',
    'rhydon',
    'chansey',
    'tangela',
    'kangaskhan',
    'horsea',
    'seadra',
    'goldeen',
    'seaking',
    'staryu',
    'starmie',
    'mr-mime',
    'scyther',
    'jynx',
    'electabuzz',
    'magmar',
    'pinsir',
    'tauros',
    'magikarp',
    'gyarados',
    'lapras',
    'ditto',
    'eevee',
    'vaporeon',
    'jolteon',
    'flareon',
    'porygon',
    'omanyte',
    'omastar',
    'kabuto',
    'kabutops',
    'aerodactyl',
    'snorlax',
    'articuno',
    'zapdos',
    'moltres',
    'dratini',
    'dragonair',
    'dragonite',
    'mewtwo',
    'mew',
    'chikorita',
    'bayleef',
    'meganium',
    'cyndaquil',
    'quilava',
    'typhlosion',
    'totodile',
    'croconaw',
    'feraligatr',
    'sentret',
    'furret',
    'hoothoot',
    'noctowl',
    'ledyba',
    'ledian',
    'spinarak',
    'ariados',
    'crobat',
    'chinchou',
    'lanturn',
    'pichu',
    'cleffa',
    'igglybuff',
    'togepi',
    'togetic',
    'natu',
    'xatu',
    'mareep',
    'flaaffy',
    'ampharos',
    'bellossom',
    'marill',
    'azumarill',
    'sudowoodo',
    'politoed',
    'hoppip',
    'skiploom',
    'jumpluff',
    'aipom',
    'sunkern',
    'sunflora',
    'yanma',
    'wooper',
    'quagsire',
    'espeon',
    'umbreon',
    'murkrow',
    'slowking',
    'misdreavus',
    'unown',
    'wobbuffet',
    'girafarig',
    'pineco',
    'forretress',
    'dunsparce',
    'gligar',
    'steelix',
    'snubbull',
    'granbull',
    'qwilfish',
    'scizor',
    'shuckle',
    'heracross',
    'sneasel',
    'teddiursa',
    'ursaring',
    'slugma',
    'magcargo',
    'swinub',
    'piloswine',
    'corsola',
    'remoraid',
    'octillery',
    'delibird',
    'mantine',
    'skarmory',
    'houndour',
    'houndoom',
    'kingdra',
    'phanpy',
    'donphan',
    'porygon2',
    'stantler',
    'smeargle',
    'tyrogue',
    'hitmontop',
    'smoochum',
    'elekid',
    'magby',
    'miltank',
    'blissey',
    'raikou',
    'entei',
    'suicune',
    'larvitar',
    'pupitar',
    'tyranitar',
    'lugia',
    'ho-oh',
    'celebi',
    'treecko',
    'grovyle',
    'sceptile',
    'torchic',
    'combusken',
    'blaziken',
    'mudkip',
    'marshtomp',
    'swampert',
    'poochyena',
    'mightyena',
    'zigzagoon',
    'linoone',
    'wurmple',
    'silcoon',
    'beautifly',
    'cascoon',
    'dustox',
    'lotad',
    'lombre',
    'ludicolo',
    'seedot',
    'nuzleaf',
    'shiftry',
    'taillow',
    'swellow',
    'wingull',
    'pelipper',
    'ralts',
    'kirlia',
    'gardevoir',
    'surskit',
    'masquerain',
    'shroomish',
    'breloom',
    'slakoth',
    'vigoroth',
    'slaking',
    'nincada',
    'ninjask',
    'shedinja',
    'whismur',
    'loudred',
    'exploud',
    'makuhita',
    'hariyama',
    'azurill',
    'nosepass',
    'skitty',
    'delcatty',
    'sableye',
    'mawile',
    'aron',
    'lairon',
    'aggron',
    'meditite',
    'medicham',
    'electrike',
    'manectric',
    'plusle',
    'minun',
    'volbeat',
    'illumise',
    'roselia',
    'gulpin',
    'swalot',
    'carvanha',
    'sharpedo',
    'wailmer',
    'wailord',
    'numel',
    'camerupt',
    'torkoal',
    'spoink',
    'grumpig',
    'spinda',
    'trapinch',
    'vibrava',
    'flygon',
    'cacnea',
    'cacturne',
    'swablu',
    'altaria',
    'zangoose',
    'seviper',
    'lunatone',
    'solrock',
    'barboach',
    'whiscash',
    'corphish',
    'crawdaunt',
    'baltoy',
    'claydol',
    'lileep',
    'cradily',
    'anorith',
    'armaldo',
    'feebas',
    'milotic',
    'castform',
    'kecleon',
    'shuppet',
    'banette',
    'duskull',
    'dusclops',
    'tropius',
    'chimecho',
    'absol',
    'wynaut',
    'snorunt',
    'glalie',
    'spheal',
    'sealeo',
    'walrein',
    'clamperl',
    'huntail',
    'gorebyss',
    'relicanth',
    'luvdisc',
    'bagon',
    'shelgon',
    'salamence',
    'beldum',
    'metang',
    'metagross',
    'regirock',
    'regice',
    'registeel',
    'latias',
    'latios',
    'kyogre',
    'groudon',
    'rayquaza',
    'jirachi',
    'deoxys',
    'turtwig',
    'grotle',
    'torterra',
    'chimchar',
    'monferno',
    'infernape',
    'piplup',
    'prinplup',
    'empoleon',
    'starly',
    'staravia',
    'staraptor',
    'bidoof',
    'bibarel',
    'kricketot',
    'kricketune',
    'shinx',
    'luxio',
    'luxray',
    'budew',
    'roserade',
    'cranidos',
    'rampardos',
    'shieldon',
    'bastiodon',
    'burmy',
    'wormadam',
    'mothim',
    'combee',
    'vespiquen',
    'pachirisu',
    'buizel',
    'floatzel',
    'cherubi',
    'cherrim',
    'shellos',
    'gastrodon',
    'ambipom',
    'drifloon',
    'drifblim',
    'buneary',
    'lopunny',
    'mismagius',
    'honchkrow',
    'glameow',
    'purugly',
    'chingling',
    'stunky',
    'skuntank',
    'bronzor',
    'bronzong',
    'bonsly',
    'mime-jr',
    'happiny',
    'chatot',
    'spiritomb',
    'gible',
    'gabite',
    'garchomp',
    'munchlax',
    'riolu',
    'lucario',
    'hippopotas',
    'hippowdon',
    'skorupi',
    'drapion',
    'croagunk',
    'toxicroak',
    'carnivine',
    'finneon',
    'lumineon',
    'mantyke',
    'snover',
    'abomasnow',
    'weavile',
    'magnezone',
    'lickilicky',
    'rhyperior',
    'tangrowth',
    'electivire',
    'magmortar',
    'togekiss',
    'yanmega',
    'leafeon',
    'glaceon',
    'gliscor',
    'mamoswine',
    'porygon-z',
    'gallade',
    'probopass',
    'dusknoir',
    'froslass',
    'rotom',
    'uxie',
    'mesprit',
    'azelf',
    'dialga',
    'palkia',
    'heatran',
    'regigigas',
    'giratina',
    'cresselia',
    'phione',
    'manaphy',
    'darkrai',
    'shaymin',
    'arceus',
    'victini',
    'snivy',
    'servine',
    'serperior',
    'tepig',
    'pignite',
    'emboar',
    'oshawott',
    'dewott',
    'samurott',
    'patrat',
    'watchog',
    'lillipup',
    'herdier',
    'stoutland',
    'purrloin',
    'liepard',
    'pansage',
    'simisage',
    'pansear',
    'simisear',
    'panpour',
    'simipour',
    'munna',
    'musharna',
    'pidove',
    'tranquill',
    'unfezant',
    'blitzle',
    'zebstrika',
    'roggenrola',
    'boldore',
    'gigalith',
    'woobat',
    'swoobat',
    'drilbur',
    'excadrill',
    'audino',
    'timburr',
    'gurdurr',
    'conkeldurr',
    'tympole',
    'palpitoad',
    'seismitoad',
    'throh',
    'sawk',
    'sewaddle',
    'swadloon',
    'leavanny',
    'venipede',
    'whirlipede',
    'scolipede',
    'cottonee',
    'whimsicott',
    'petilil',
    'lilligant',
    'basculin',
    'sandile',
    'krokorok',
    'krookodile',
    'darumaka',
    'darmanitan',
    'maractus',
    'dwebble',
    'crustle',
    'scraggy',
    'scrafty',
    'sigilyph',
    'yamask',
    'cofagrigus',
    'tirtouga',
    'carracosta',
    'archen',
    'archeops',
    'trubbish',
    'garbodor',
    'zorua',
    'zoroark',
    'minccino',
    'cinccino',
    'gothita',
    'gothorita',
    'gothitelle',
    'solosis',
    'duosion',
    'reuniclus',
    'ducklett',
    'swanna',
    'vanillite',
    'vanillish',
    'vanilluxe',
    'deerling',
    'sawsbuck',
    'emolga',
    'karrablast',
    'escavalier',
    'foongus',
    'amoonguss',
    'frillish',
    'jellicent',
    'alomomola',
    'joltik',
    'galvantula',
    'ferroseed',
    'ferrothorn',
    'klink',
    'klang',
    'klinklang',
    'tynamo',
    'eelektrik',
    'eelektross',
    'elgyem',
    'beheeyem',
    'litwick',
    'lampent',
    'chandelure',
    'axew',
    'fraxure',
    'haxorus',
    'cubchoo',
    'beartic',
    'cryogonal',
    'shelmet',
    'accelgor',
    'stunfisk',
    'mienfoo',
    'mienshao',
    'druddigon',
    'golett',
    'golurk',
    'pawniard',
    'bisharp',
    'bouffalant',
    'rufflet',
    'braviary',
    'vullaby',
    'mandibuzz',
    'heatmor',
    'durant',
    'deino',
    'zweilous',
    'hydreigon',
    'larvesta',
    'volcarona',
    'cobalion',
    'terrakion',
    'virizion',
    'tornadus',
    'thundurus',
    'reshiram',
    'zekrom',
    'landorus',
    'kyurem',
    'keldeo',
    'meloetta',
    'genesect',
    'chespin',
    'quilladin',
    'chesnaught',
    'fennekin',
    'braixen',
    'delphox',
    'froakie',
    'frogadier',
    'greninja',
    'bunnelby',
    'diggersby',
    'fletchling',
    'fletchinder',
    'talonflame',
    'scatterbug',
    'spewpa',
    'vivillon',
    'litleo',
    'pyroar',
    'flabebe',
    'floette',
    'florges',
    'skiddo',
    'gogoat',
    'pancham',
    'pangoro',
    'furfrou',
    'espurr',
    'meowstic',
    'honedge',
    'doublade',
    'aegislash',
    'spritzee',
    'aromatisse',
    'swirlix',
    'slurpuff',
    'inkay',
    'malamar',
    'binacle',
    'barbaracle',
    'skrelp',
    'dragalge',
    'clauncher',
    'clawitzer',
    'helioptile',
    'heliolisk',
    'tyrunt',
    'tyrantrum',
    'amaura',
    'aurorus',
    'sylveon',
    'hawlucha',
    'dedenne',
    'carbink',
    'goomy',
    'sliggoo',
    'goodra',
    'klefki',
    'phantump',
    'trevenant',
    'pumpkaboo',
    'gourgeist',
    'bergmite',
    'avalugg',
    'noibat',
    'noivern',
    'xerneas',
    'yveltal',
    'zygarde',
    'diancie',
    'hoopa',
    'volcanion',
    'rowlet',
    'dartrix',
    'decidueye',
    'litten',
    'torracat',
    'incineroar',
    'popplio',
    'brionne',
    'primarina',
    'pikipek',
    'trumbeak',
    'toucannon',
    'yungoos',
    'gumshoos',
    'grubbin',
    'charjabug',
    'vikavolt',
    'crabrawler',
    'crabominable',
    'oricorio',
    'cutiefly',
    'ribombee',
    'rockruff',
    'lycanroc',
    'wishiwashi',
    'mareanie',
    'toxapex',
    'mudbray',
    'mudsdale',
    'dewpider',
    'araquanid',
    'fomantis',
    'lurantis',
    'morelull',
    'shiinotic',
    'salandit',
    'salazzle',
    'stufful',
    'bewear',
    'bounsweet',
    'steenee',
    'tsareena',
    'comfey',
    'oranguru',
    'passimian',
    'wimpod',
    'golisopod',
    'sandygast',
    'palossand',
    'pyukumuku',
    'type-null',
    'silvally',
    'minior',
    'komala',
    'turtonator',
    'togedemaru',
    'mimikyu',
    'bruxish',
    'drampa',
    'dhelmise',
    'jangmo-o',
    'hakamo-o',
    'kommo-o',
    'tapu-koko',
    'tapu-lele',
    'tapu-bulu',
    'tapu-fini',
    'cosmog',
    'cosmoem',
    'solgaleo',
    'lunala',
    'nihilego',
    'buzzwole',
    'pheromosa',
    'xurkitree',
    'celesteela',
    'kartana',
    'guzzlord',
    'necrozma',
    'magearna',
    'marshadow',
    'poipole',
    'naganadel',
    'stakataka',
    'blacephalon',
    'zeraora',
    'meltan',
    'melmetal',
]


IRREGULAR_SPECIES_NAMES = {
    '-----': 'NONE',
    'NIDORAN♀': 'NIDORAN_F',
    'NIDORAN♂': 'NIDORAN_M',
    'FARFETCH’D': 'FARFETCHD',
    'FARFETCH’_D': 'FARFETCHD',
    'MR. MIME': 'MR_MIME',
    'MR._MIME': 'MR_MIME',
    'HO-OH': 'HO_OH',
    'MIME JR.': 'MIME_JR',
    'MIME_JR.': 'MIMEJR',
    'PORYGON-Z': 'PORYGON_Z',
    'DEOXYS_(_A)': 'DEOXYS_ATTACK',
    'DEOXYS_(_D)': 'DEOXYS_DEFENSE',
    'DEOXYS_(_S)': 'DEOXYS_SPEED',
    'WORMADAM_(_S)': 'WORMADAM_SANDY',
    'WORMADAM_(_T)': 'WORMADAM_TRASHY',
    'GIRATINA_(_O)': 'GIRATINA_ORIGIN',
    'SHAYMIN_(_S)': 'SHAYMIN_SKY',
    'ROTOM_(_HEAT)': 'ROTOM_HEAT',
    'ROTOM_(_WASH)': 'ROTOM_WASH',
    'ROTOM_(_FROST)': 'ROTOM_FROST',
    'ROTOM_(_FAN)': 'ROTOM_FAN',
    'ROTOM_(_MOW)': 'ROTOM_MOW',
    'MIME_JR': 'MIMEJR',
}


IRREGULAR_ABILITIES = {
    'COMPOUNDEYES': 'COMPOUND_EYES',
    'LIGHTNINGROD': 'LIGHTNING_ROD',
}


IRREGULAR_ITEMS = {
    'KING’S_ROCK': 'KINGS_ROCK',
    'SILVER_POWDER': 'SILVERPOWDER',
    'TINY_MUSHROOM': 'TINYMUSHROOM',
    'TWISTED_SPOON': 'TWISTEDSPOON',
    'DEEP_SEA_SCALE': 'DEEPSEASCALE',
    'DEEP_SEA_TOOTH': 'DEEPSEATOOTH',
    'NEVER_MELT_ICE': 'NEVERMELTICE',
    'BLACK_GLASSES': 'BLACKGLASSES',
    'BRIGHT_POWDER': 'BRIGHTPOWDER',
}


IRREGULAR_EGG_GROUP = {
    'PLANT': 'GRASS',
    'WATER1': 'WATER_1',
    'WATER2': 'WATER_2',
    'WATER3': 'WATER_3',
    'GROUND': 'FIELD',
    'NO_EGGS': 'UNDISCOVERED',
    'NO EGGS': 'UNDISCOVERED',
    'INDETERMINATE': 'AMORPHOUS',
    'HUMANSHAPE': 'HUMAN_LIKE',
}


IRREGULAR_EXP_GROUP = {
    'MEDIUM': 'MEDIUM_FAST',
    'SLOW_THEN_VERY_FAST': 'ERRATIC',
    'FAST_THEN_VERY_SLOW': 'FLUCTUATING',
}






def upper_snake_case(s: str) -> str:
    return '_'.join(
        re.sub(
            '([A-Z][a-z]+)',
            r' \1',
            re.sub(
                '([A-Z]+)',
                r' \1',
                s.replace('-', ' ')
            )
        ).split()
    ).upper()



def sanitize(ability: str, sanitation_dict: dict[str, str]) -> str:
    snake = upper_snake_case(ability)
    if snake == '':
        return 'NONE'
    
    if snake in sanitation_dict:
        return sanitation_dict[snake]

    return snake



#print(dir(currentMon))

dump_template = """

mondata SPECIES_{species}
    basestats {base_hp}, {base_atk}, {base_def}, {base_spe}, {base_spa}, {base_spd}
    types {type_1}, {type_2}
    catchrate {catch_rate}
    baseexp {exp_yield}
    evyields {ev_yield_hp}, {ev_yield_atk}, {ev_yield_def}, {ev_yield_spe}, {ev_yield_spa}, {ev_yield_spd}
    items ITEM_{item_uncommon}, ITEM_{item_rare}
    genderratio {gender_ratio}
    eggcycles {hatch_multi}
    basefriendship {base_friendship}
    growthrate GROWTH_{growth_rate}
    egggroups EGG_GROUP_{egg_group_1}, EGG_GROUP_{egg_group_2}
    abilities ABILITY_{ability_1}, ABILITY_{ability_2}
    runchance {run_chance}
    colorflip BODY_COLOR_{body_color}, {flip:d}
    tmdata SPECIES_{species}_TM_DATA_0, SPECIES_{species}_TM_DATA_1, SPECIES_{species}_TM_DATA_2, SPECIES_{species}_TM_DATA_3"""

for i in range(719-1, 809):
    currentMon = pb.APIResource('pokemon', SPECIESLIST[i])
    currentMonBaseData = pb.APIResource('pokemon-species', SPECIESLIST[i])
    
    type_1=str(currentMon.types[0].type).upper(),
    type_2=str(currentMon.types[1 if len(currentMon.types) > 1 else 0].type).upper(),
    
    if ("FAIRY" in type_1[0]):
        type_1 = "(FAIRY_TYPE_IMPLEMENTED) ? TYPE_FAIRY : TYPE_NORMAL"
        type_1_fairy = 1
    else:
        type_1 = "TYPE_" + str(type_1[0])
        type_1_fairy = 0

    if ("FAIRY" in type_2[0]):
        type_2 = "(FAIRY_TYPE_IMPLEMENTED) ? TYPE_FAIRY : TYPE_NORMAL"
        if (type_1_fairy == 0):
            type_2 = "(FAIRY_TYPE_IMPLEMENTED) ? TYPE_FAIRY : " + type_1
    else:
        type_2 = "TYPE_" + str(type_2[0])
    
    dump_data = dump_template.format(
        species=sanitize(SPECIESLIST[i].upper(), IRREGULAR_SPECIES_NAMES),
        base_hp=currentMon.stats[0].base_stat,
        base_atk=currentMon.stats[1].base_stat,
        base_def=currentMon.stats[2].base_stat,
        base_spe=currentMon.stats[5].base_stat,
        base_spa=currentMon.stats[3].base_stat,
        base_spd=currentMon.stats[4].base_stat,
        type_1=type_1,
        type_2=type_2,
        catch_rate=currentMonBaseData.capture_rate,
        exp_yield="0 // defined in baseexp.s",
        ev_yield_hp=currentMon.stats[0].effort,
        ev_yield_atk=currentMon.stats[1].effort,
        ev_yield_def=currentMon.stats[2].effort,
        ev_yield_spe=currentMon.stats[5].effort,
        ev_yield_spa=currentMon.stats[3].effort,
        ev_yield_spd=currentMon.stats[4].effort,
        item_uncommon=sanitize(str(currentMon.held_items[0].item.name).upper(), IRREGULAR_ITEMS) if len(currentMon.held_items) > 0 else "NONE",
        item_rare=sanitize(str(currentMon.held_items[1].item.name).upper(), IRREGULAR_ITEMS) if len(currentMon.held_items) > 1 else "NONE",
        gender_ratio=math.floor(currentMonBaseData.gender_rate * 254 / 8) if currentMonBaseData.gender_rate > 0 else 255,
        hatch_multi=currentMonBaseData.hatch_counter,
        base_friendship=currentMonBaseData.base_happiness,
        growth_rate=sanitize(str(currentMonBaseData.growth_rate.name).upper(), IRREGULAR_EXP_GROUP),
        egg_group_1=sanitize(str(currentMonBaseData.egg_groups[0].name).upper(), IRREGULAR_EGG_GROUP),
        egg_group_2=sanitize(str(currentMonBaseData.egg_groups[1 if len(currentMonBaseData.egg_groups) > 1 else 0].name).upper(), IRREGULAR_EGG_GROUP),
        ability_1=sanitize(str(currentMon.abilities[0].ability.name), IRREGULAR_ABILITIES),
        ability_2=sanitize(str(currentMon.abilities[1].ability.name), IRREGULAR_ABILITIES) if len(currentMon.abilities) > 1 and int(currentMon.abilities[1].slot) == 2 else "NONE",
        run_chance=0, # probably breaks safari
        body_color=str(currentMonBaseData.color.name).upper(),
        flip=0,
    )
    
    print(dump_data)

    #mondata_dump.write(dump_data)
